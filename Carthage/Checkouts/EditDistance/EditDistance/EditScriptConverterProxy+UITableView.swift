//
//  EditScriptConverter+UITableView.swift
//  EditDistance
//
//  Copyright (c) 2017 Kazuhiro Hayashi
//
//  Permission is hereby granted, free of charge, to any person obtaining a copy
//  of this software and associated documentation files (the "Software"), to deal
//  in the Software without restriction, including without limitation the rights
//  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
//  copies of the Software, and to permit persons to whom the Software is
//  furnished to do so, subject to the following conditions:
//
//  The above copyright notice and this permission notice shall be included in
//  all copies or substantial portions of the Software.
//
//  THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
//  THE SOFTWARE.

import UIKit

public extension EditScriptConverterProxy where Converter: UITableView {
    
    /// Updates this UICollectionView object with EditDistanceContainer object.
    ///
    /// EditScript array in the object is converted to insertRows(at:,with:) and deleteRows(at:,with:) of UITableView
    /// - Parameter container: EditDistanceContainer object generated by EditDistance
    public func reload<T>(with container: EditDistanceContainer<T>) {
        _converter.beginUpdates()
        container.editScripts.forEach({ (script) in
            switch script {
            case .add(_, let indexPath):
                _converter.insertRows(at: [indexPath], with: .fade)
            case .delete(_, let indexPath):
                _converter.deleteRows(at: [indexPath], with: .fade)
            case .common:
                break
            }
        })
        _converter.endUpdates()
    }
}
